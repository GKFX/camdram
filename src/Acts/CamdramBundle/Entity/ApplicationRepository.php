<?php

namespace Acts\CamdramBundle\Entity;

use Doctrine\ORM\EntityRepository;

use Doctrine\ORM\Query\Expr;

/**
 * ApplicationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ApplicationRepository extends EntityRepository
{
    private function getLatestQuery($limit, \DateTime $now)
    {
        $qb = $this->createQueryBuilder('a');
        $qb->leftJoin('a.show', 's')
            ->where($qb->expr()->orX('a.deadlineDate > :current_date',
                $qb->expr()->andX('a.deadlineDate = :current_date', 'a.deadlineTime >= :current_time')))
            ->andWhere('s.authorised_by is not null')
            ->andWhere('s.entered != false')
            ->orderBy('a.deadlineDate','DESC')
            ->addOrderBy('a.deadlineTime','DESC')
            ->setParameter('current_date', $now, \Doctrine\DBAL\Types\Type::DATE)
            ->setParameter('current_time', $now, \Doctrine\DBAL\Types\Type::TIME);


        if ($limit > 0) $qb->setMaxResults($limit);

        return $qb;
    }

    public function findLatest($limit, \DateTime $now)
    {
        return $this->getLatestQuery($limit, $now)->getQuery()->getResult();
    }

    public function findLatestBySociety(Society $society, $limit, \DateTime $now)
    {
        $qb = $this->getLatestQuery($limit, $now);
        $qb->leftJoin('s.society', 'y')->andWhere(
                    $qb->expr()->orX('y = :society', 'a.society = :society')
            )->setParameter('society', $society)
            ->getQuery()->getResult();
    }

    public function findLatestByVenue(Venue $venue, $limit, \DateTime $now)
    {
        $qb = $this->getLatestQuery($limit, $now);
        $qb->leftJoin('s.venue', 'v')->andWhere('v = :venue')->setParameter('venue', $venue)
            ->getQuery()->getResult();
    }
}
