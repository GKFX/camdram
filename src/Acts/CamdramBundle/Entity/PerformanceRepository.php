<?php

namespace Acts\CamdramBundle\Entity;

use Doctrine\ORM\EntityRepository;

use Doctrine\ORM\Query\Expr;

/**
 * PerformanceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PerformanceRepository extends EntityRepository
{
    /**
     * findAuthorizedJoinedToShow
     *
     * Find all authorized performances between two dates, joined to the 
     * corresponding show.
     *
     * @param integer $startDate start date expressed as a Unix timestamp
     * @param integer $endDate emd date expressed as a Unix timestamp
     *
     * @return array of performances
     */
    public function findAuthorizedJoinedToShow($startDate, $endDate)
    {
        $query_res = $this->getEntityManager()->getRepository('ActsCamdramBundle:Performance');
        $query = $query_res->createQueryBuilder('p')
            ->leftJoin('ActsCamdramBundle:Show', 's', Expr\Join::WITH, 'p.show = s.id')
            ->where('p.start_date <= :enddate')
            ->andWhere('p.end_date >= :startdate')
            ->andWhere('s.authorize_id > 0')
            ->setParameters(array(
                'startdate' => date("Y/m/d", $startDate),
                'enddate' => date("Y/m/d", $endDate)
                ))
            ->orderBy('p.time, p.start_date, s.id, p.end_date')
            ->getQuery();

        return $query->getResult();
    }
}
