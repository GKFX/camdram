<?php

namespace Acts\CamdramBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TimePeriodRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TimePeriodRepository extends EntityRepository
{

    public function getCurrentTimePeriods($limit)
    {
        $periods = array($this->getCurrentTimePeriod());
        $qb = $this->createQueryBuilder('p');
        $query = $qb->where($qb->expr()->andX('p.start_at < :now', 'p.end_at >= :now'))
            ->orWhere('p.start_at >= :now')
            ->setParameter('now', new \DateTime)
            ->orderBy('p.start_at', 'ASC')
            ->setMaxResults($limit)
            ->getQuery();
        return $query->getResult();
    }

    public function getCurrentTimePeriod()
    {
        return $this->createQueryBuilder('p')
            ->where('p.start_at < :now')->andWhere('p.end_at >= :now')
            ->setParameter('now', new \DateTime)
            ->getQuery()->getOneOrNullResult();
    }

    public function getTimePeriod(\DateTime $date)
    {
        return $this->createQueryBuilder('p')
            ->where('p.start_at < :date')->andWhere('p.end_at >= :date')
            ->setParameter('date', $date)
            ->getQuery()->getOneOrNullResult();
    }

    public function getTimePeriods($start, $end)
    {

        $qb = $this->createQueryBuilder('p');

        $query = $qb
            ->where($qb->expr()->andX('p.start_at < :start', 'p.end_at >= :start'))
            ->orWhere($qb->expr()->andX('p.start_at < :end', 'p.end_at >= :end'))
            ->orWhere($qb->expr()->andX('p.start_at > :start', 'p.end_at <= :end'))
            ->setParameter('start', $start)->setParameter('end', $end)
            ->getQuery();

        return $query->getResult();
    }
}
