facebook:
    base_url: https://graph.facebook.com
    class: oauth2
    login_url: https://www.facebook.com/dialog/oauth
    scope: email
    paths:
        access_token:
            path: /oauth/access_token
            arguments: [client_id, client_secret, code, grant_type, redirect_uri]
            requires_authentication: false
        search:
            path: /search
            arguments: [q, type]
            response: {root: 'data'}
        current_user:
            path: /me
            arguments: []
        posts:
            path: /{id}/posts
            arguments: [id, limit]
            defaults: {count: 50}
            response: {root: 'data', map: {text: message, created_at: created_time, mentions: message_tags}}
            url_has_params: true

twitter:
    base_url: https://api.twitter.com
    class: oauth1
    login_url: https://api.twitter.com/oauth/authenticate
    scope: ~
    paths:
        search:
            path: /1.1/users/search.json
            arguments: [q]
            response: {map: {screen_name: username}}
        access_token:
            path: /oauth/access_token
            arguments: [oauth_verifier]
        request_token:
            path: /oauth/request_token
            arguments: [oauth_callback]
        current_user:
            path: /1.1/account/verify_credentials.json
            arguments: []
            response: {map: {screen_name: username}}
        posts:
            path: /1.1/statuses/user_timeline.json
            arguments: [user_id, count]
            defaults: {count: 50, trim_user: true, include_rts: false}
            response: {map: {urls: entities.urls, mentions: entities.user_mentions }}
            url_has_params: true

google:
    base_url: ~
    class: oauth2
    login_url: https://accounts.google.com/o/oauth2/auth
    scope: https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
    paths:
        access_token:
            path: https://accounts.google.com/o/oauth2/token
            arguments: [client_id, client_secret, code, grant_type, redirect_uri]
            requires_authentication: false
            method: POST
        current_user:
            path: https://www.googleapis.com/oauth2/v1/userinfo
            arguments: []
            response: {map: {email: username}}
google_simple:
    class: simple
    base_url: ~
    paths:
        place_search:
            path: https://maps.googleapis.com/maps/api/place/nearbysearch/json
            arguments: [keyword, location, radius]
            defaults: {sensor: 'false'}
            response: {root: 'results'}